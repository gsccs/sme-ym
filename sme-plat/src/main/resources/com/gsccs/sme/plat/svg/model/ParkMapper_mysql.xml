<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.sme.plat.svg.dao.ParkMapper" >
  <resultMap id="BaseResultMap" type="com.gsccs.sme.plat.svg.model.ParkT" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="indexnum" property="indexnum" jdbcType="INTEGER" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="domain" property="domain" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="svgid" property="svgid" jdbcType="BIGINT" />
    <result column="template" property="template" jdbcType="VARCHAR" />
    <!--  -->
    <result column="svgtitle" property="svgtitle" jdbcType="VARCHAR" />
    <result column="corpnum" property="corpnum" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.gsccs.sme.plat.svg.model.ParkT" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, remark, addtime, indexnum, logo, address,phone,domain,status, svgid, template
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <sql id="join_Column_List" >
    corpnum,svgtitle
  </sql>
  
  
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.gsccs.sme.plat.svg.model.ParkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sme_park
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="com.gsccs.sme.plat.svg.model.ParkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="join_Column_List" />
    from (
    	select aa.*,b.title as svgtitle
    	from  (select a.*,count(c.id) as corpnum
				from sme_park a 
				left join sme_corp c
				on a.id = c.parkid
				group by a.id) as aa
		left join sme_svorg b
		on aa.svgid = b.id
    ) as aaa
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sme_park
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sme_park
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.gsccs.sme.plat.svg.model.ParkExample" >
    delete from sme_park
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"
   parameterType="com.gsccs.sme.plat.svg.model.ParkT" >
    insert into sme_park (id, title, remark, 
      addtime, indexnum, logo, address,phone,domain,
      status, svgid, template, 
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP}, #{indexnum,jdbcType=INTEGER}, #{logo,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{domain,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{svgid,jdbcType=BIGINT}, #{template,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  
  <select id="countByExample" parameterType="com.gsccs.sme.plat.svg.model.ParkExample" resultType="java.lang.Integer" >
    select count(*) from sme_park
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sme_park
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.indexnum != null" >
        indexnum = #{record.indexnum,jdbcType=INTEGER},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.domain != null" >
        domain = #{record.domain,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.svgid != null" >
        svgid = #{record.svgid,jdbcType=BIGINT},
      </if>
      <if test="record.template != null" >
        template = #{record.template,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sme_park
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      indexnum = #{record.indexnum,jdbcType=INTEGER},
      logo = #{record.logo,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      domain = #{record.domain,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      svgid = #{record.svgid,jdbcType=BIGINT},
      template = #{record.template,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sme_park
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      indexnum = #{record.indexnum,jdbcType=INTEGER},
      logo = #{record.logo,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      domain = #{record.domain,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      svgid = #{record.svgid,jdbcType=BIGINT},
      template = #{record.template,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gsccs.sme.plat.svg.model.ParkT" >
    update sme_park
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="indexnum != null" >
        indexnum = #{indexnum,jdbcType=INTEGER},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="domain != null" >
        domain = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="svgid != null" >
        svgid = #{svgid,jdbcType=BIGINT},
      </if>
      <if test="template != null" >
        template = #{template,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gsccs.sme.plat.svg.model.ParkT" >
    
    update sme_park
    set title = #{title,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      indexnum = #{indexnum,jdbcType=INTEGER},
      logo = #{logo,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      domain = #{domain,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      svgid = #{svgid,jdbcType=BIGINT},
      template = #{template,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gsccs.sme.plat.svg.model.ParkT" >
    update sme_park
    set title = #{title,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      indexnum = #{indexnum,jdbcType=INTEGER},
      logo = #{logo,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      domain = #{domain,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      svgid = #{svgid,jdbcType=BIGINT},
      template = #{template,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>