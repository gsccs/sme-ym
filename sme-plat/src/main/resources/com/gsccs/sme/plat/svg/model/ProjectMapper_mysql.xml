<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.sme.plat.svg.dao.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.gsccs.sme.plat.svg.model.ProjectT" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="intype" property="intype" jdbcType="VARCHAR" />
    <result column="corpid" property="corpid" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="backdrop" property="backdrop" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="DATE" />
    <result column="endtime" property="endtime" jdbcType="DATE" />
    <result column="invest" property="invest" jdbcType="VARCHAR" />
    <result column="moneytype" property="moneytype" jdbcType="VARCHAR" />
    <result column="linker" property="linker" jdbcType="VARCHAR" />
    <result column="linktel" property="linktel" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <!--  -->
    <result column="corptitle" property="corptitle" jdbcType="VARCHAR" />
    <result column="hycodestr" property="hycodestr" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.gsccs.sme.plat.svg.model.ProjectT" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, intype, corpid, address, backdrop, starttime, endtime, invest, moneytype, 
    linker, linktel, content,status
  </sql>
 
  <sql id="Join_Column_List" >
    corptitle,hycodestr
  </sql>
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gsccs.sme.plat.svg.model.ProjectTExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sme_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="com.gsccs.sme.plat.svg.model.ProjectTExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Join_Column_List" />
    from (
    	select a.*,b.title as corptitle,c.title as hycodestr
    	from sme_project a
    	left join sme_corp b on a.corpid = b.id
    	left join sme_industry c on a.intype = c.id
     ) as aa
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit ${skip},${pageSize}
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sme_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sme_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gsccs.sme.plat.svg.model.ProjectTExample" >
    delete from sme_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gsccs.sme.plat.svg.model.ProjectT" >
    insert into sme_project (id, title, intype, 
      corpid, address, backdrop, 
      starttime, endtime, invest, 
      moneytype, linker, linktel, 
      status, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{intype,jdbcType=VARCHAR}, 
      #{corpid,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{backdrop,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, #{invest,jdbcType=VARCHAR}, 
      #{moneytype,jdbcType=VARCHAR}, #{linker,jdbcType=VARCHAR}, #{linktel,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR})
  </insert>
  
  <select id="countByExample" parameterType="com.gsccs.sme.plat.svg.model.ProjectTExample" resultType="java.lang.Integer" >
    select count(*) from sme_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map" >
    update sme_project
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      intype = #{record.intype,jdbcType=VARCHAR},
      corpid = #{record.corpid,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      backdrop = #{record.backdrop,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=DATE},
      endtime = #{record.endtime,jdbcType=DATE},
      invest = #{record.invest,jdbcType=VARCHAR},
      moneytype = #{record.moneytype,jdbcType=VARCHAR},
      linker = #{record.linker,jdbcType=VARCHAR},
      linktel = #{record.linktel,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKey" parameterType="com.gsccs.sme.plat.svg.model.ProjectT" >
    update sme_project
    set title = #{title,jdbcType=VARCHAR},
      intype = #{intype,jdbcType=VARCHAR},
      corpid = #{corpid,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      backdrop = #{backdrop,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=DATE},
      endtime = #{endtime,jdbcType=DATE},
      invest = #{invest,jdbcType=VARCHAR},
      moneytype = #{moneytype,jdbcType=VARCHAR},
      linker = #{linker,jdbcType=VARCHAR},
      linktel = #{linktel,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>