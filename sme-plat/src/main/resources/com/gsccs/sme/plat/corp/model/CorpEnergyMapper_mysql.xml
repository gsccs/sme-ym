<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gsccs.sme.plat.corp.dao.CorpEnergyMapper">
  <resultMap id="BaseResultMap" type="com.gsccs.sme.api.domain.corp.CorpEnergy">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="grossnum" jdbcType="REAL" property="grossnum" />
    <result column="addednum" jdbcType="REAL" property="addednum" />
    <result column="allnum" jdbcType="REAL" property="allnum" />
    <result column="electrnum" jdbcType="REAL" property="electrnum" />
    <result column="waternum" jdbcType="REAL" property="waternum" />
    <result column="grosspower" jdbcType="REAL" property="grosspower" />
    <result column="grosselectr" jdbcType="REAL" property="grosselectr" />
    <result column="grosswater" jdbcType="REAL" property="grosswater" />
    <result column="addedpower" jdbcType="REAL" property="addedpower" />
    <result column="addedelectr" jdbcType="REAL" property="addedelectr" />
    <result column="addedwater" jdbcType="REAL" property="addedwater" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, month, grossnum, addednum, allnum, electrnum, waternum, grosspower, grosselectr, 
    grosswater, addedpower, addedelectr, addedwater
  </sql>
  <select id="selectByExample" parameterType="com.gsccs.sme.plat.corp.model.CorpEnergyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sme_corp_energy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from sme_corp_energy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    delete from sme_corp_energy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gsccs.sme.plat.corp.model.CorpEnergyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    delete from sme_corp_energy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.gsccs.sme.api.domain.corp.CorpEnergy">
    insert into sme_corp_energy (id, year, month, 
      grossnum, addednum, allnum, 
      electrnum, waternum, grosspower, 
      grosselectr, grosswater, addedpower, 
      addedelectr, addedwater)
    values (#{id,jdbcType=BIGINT}, #{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, 
      #{grossnum,jdbcType=REAL}, #{addednum,jdbcType=REAL}, #{allnum,jdbcType=REAL}, 
      #{electrnum,jdbcType=REAL}, #{waternum,jdbcType=REAL}, #{grosspower,jdbcType=REAL}, 
      #{grosselectr,jdbcType=REAL}, #{grosswater,jdbcType=REAL}, #{addedpower,jdbcType=REAL}, 
      #{addedelectr,jdbcType=REAL}, #{addedwater,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.gsccs.sme.api.domain.corp.CorpEnergy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    insert into sme_corp_energy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="grossnum != null">
        grossnum,
      </if>
      <if test="addednum != null">
        addednum,
      </if>
      <if test="allnum != null">
        allnum,
      </if>
      <if test="electrnum != null">
        electrnum,
      </if>
      <if test="waternum != null">
        waternum,
      </if>
      <if test="grosspower != null">
        grosspower,
      </if>
      <if test="grosselectr != null">
        grosselectr,
      </if>
      <if test="grosswater != null">
        grosswater,
      </if>
      <if test="addedpower != null">
        addedpower,
      </if>
      <if test="addedelectr != null">
        addedelectr,
      </if>
      <if test="addedwater != null">
        addedwater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="grossnum != null">
        #{grossnum,jdbcType=REAL},
      </if>
      <if test="addednum != null">
        #{addednum,jdbcType=REAL},
      </if>
      <if test="allnum != null">
        #{allnum,jdbcType=REAL},
      </if>
      <if test="electrnum != null">
        #{electrnum,jdbcType=REAL},
      </if>
      <if test="waternum != null">
        #{waternum,jdbcType=REAL},
      </if>
      <if test="grosspower != null">
        #{grosspower,jdbcType=REAL},
      </if>
      <if test="grosselectr != null">
        #{grosselectr,jdbcType=REAL},
      </if>
      <if test="grosswater != null">
        #{grosswater,jdbcType=REAL},
      </if>
      <if test="addedpower != null">
        #{addedpower,jdbcType=REAL},
      </if>
      <if test="addedelectr != null">
        #{addedelectr,jdbcType=REAL},
      </if>
      <if test="addedwater != null">
        #{addedwater,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gsccs.sme.plat.corp.model.CorpEnergyExample" resultType="java.lang.Integer">
    select count(*) from sme_corp_energy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sme_corp_energy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.grossnum != null">
        grossnum = #{record.grossnum,jdbcType=REAL},
      </if>
      <if test="record.addednum != null">
        addednum = #{record.addednum,jdbcType=REAL},
      </if>
      <if test="record.allnum != null">
        allnum = #{record.allnum,jdbcType=REAL},
      </if>
      <if test="record.electrnum != null">
        electrnum = #{record.electrnum,jdbcType=REAL},
      </if>
      <if test="record.waternum != null">
        waternum = #{record.waternum,jdbcType=REAL},
      </if>
      <if test="record.grosspower != null">
        grosspower = #{record.grosspower,jdbcType=REAL},
      </if>
      <if test="record.grosselectr != null">
        grosselectr = #{record.grosselectr,jdbcType=REAL},
      </if>
      <if test="record.grosswater != null">
        grosswater = #{record.grosswater,jdbcType=REAL},
      </if>
      <if test="record.addedpower != null">
        addedpower = #{record.addedpower,jdbcType=REAL},
      </if>
      <if test="record.addedelectr != null">
        addedelectr = #{record.addedelectr,jdbcType=REAL},
      </if>
      <if test="record.addedwater != null">
        addedwater = #{record.addedwater,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    update sme_corp_energy
    set id = #{record.id,jdbcType=BIGINT},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      grossnum = #{record.grossnum,jdbcType=REAL},
      addednum = #{record.addednum,jdbcType=REAL},
      allnum = #{record.allnum,jdbcType=REAL},
      electrnum = #{record.electrnum,jdbcType=REAL},
      waternum = #{record.waternum,jdbcType=REAL},
      grosspower = #{record.grosspower,jdbcType=REAL},
      grosselectr = #{record.grosselectr,jdbcType=REAL},
      grosswater = #{record.grosswater,jdbcType=REAL},
      addedpower = #{record.addedpower,jdbcType=REAL},
      addedelectr = #{record.addedelectr,jdbcType=REAL},
      addedwater = #{record.addedwater,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gsccs.sme.api.domain.corp.CorpEnergy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    update sme_corp_energy
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="grossnum != null">
        grossnum = #{grossnum,jdbcType=REAL},
      </if>
      <if test="addednum != null">
        addednum = #{addednum,jdbcType=REAL},
      </if>
      <if test="allnum != null">
        allnum = #{allnum,jdbcType=REAL},
      </if>
      <if test="electrnum != null">
        electrnum = #{electrnum,jdbcType=REAL},
      </if>
      <if test="waternum != null">
        waternum = #{waternum,jdbcType=REAL},
      </if>
      <if test="grosspower != null">
        grosspower = #{grosspower,jdbcType=REAL},
      </if>
      <if test="grosselectr != null">
        grosselectr = #{grosselectr,jdbcType=REAL},
      </if>
      <if test="grosswater != null">
        grosswater = #{grosswater,jdbcType=REAL},
      </if>
      <if test="addedpower != null">
        addedpower = #{addedpower,jdbcType=REAL},
      </if>
      <if test="addedelectr != null">
        addedelectr = #{addedelectr,jdbcType=REAL},
      </if>
      <if test="addedwater != null">
        addedwater = #{addedwater,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gsccs.sme.api.domain.corp.CorpEnergy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 26 11:09:03 CST 2016.
    -->
    update sme_corp_energy
    set year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      grossnum = #{grossnum,jdbcType=REAL},
      addednum = #{addednum,jdbcType=REAL},
      allnum = #{allnum,jdbcType=REAL},
      electrnum = #{electrnum,jdbcType=REAL},
      waternum = #{waternum,jdbcType=REAL},
      grosspower = #{grosspower,jdbcType=REAL},
      grosselectr = #{grosselectr,jdbcType=REAL},
      grosswater = #{grosswater,jdbcType=REAL},
      addedpower = #{addedpower,jdbcType=REAL},
      addedelectr = #{addedelectr,jdbcType=REAL},
      addedwater = #{addedwater,jdbcType=REAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>