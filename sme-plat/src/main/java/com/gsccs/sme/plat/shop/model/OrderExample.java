package com.gsccs.sme.plat.shop.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.gsccs.sme.plat.bass.BaseExample;

public class OrderExample extends BaseExample {

	protected String orderByClause;

	protected boolean distinct;

	protected List<Criteria> oredCriteria;

	public OrderExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	public String getOrderByClause() {
		return orderByClause;
	}

	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	public boolean isDistinct() {
		return distinct;
	}

	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOrdersnIsNull() {
			addCriterion("ordersn is null");
			return (Criteria) this;
		}

		public Criteria andOrdersnIsNotNull() {
			addCriterion("ordersn is not null");
			return (Criteria) this;
		}

		public Criteria andOrdersnEqualTo(String value) {
			addCriterion("ordersn =", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnNotEqualTo(String value) {
			addCriterion("ordersn <>", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnGreaterThan(String value) {
			addCriterion("ordersn >", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnGreaterThanOrEqualTo(String value) {
			addCriterion("ordersn >=", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnLessThan(String value) {
			addCriterion("ordersn <", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnLessThanOrEqualTo(String value) {
			addCriterion("ordersn <=", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnLike(String value) {
			addCriterion("ordersn like", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnNotLike(String value) {
			addCriterion("ordersn not like", value, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnIn(List<String> values) {
			addCriterion("ordersn in", values, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnNotIn(List<String> values) {
			addCriterion("ordersn not in", values, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnBetween(String value1, String value2) {
			addCriterion("ordersn between", value1, value2, "ordersn");
			return (Criteria) this;
		}

		public Criteria andOrdersnNotBetween(String value1, String value2) {
			addCriterion("ordersn not between", value1, value2, "ordersn");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("status like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("status not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andBuyeridIsNull() {
			addCriterion("buyerid is null");
			return (Criteria) this;
		}

		public Criteria andBuyeridIsNotNull() {
			addCriterion("buyerid is not null");
			return (Criteria) this;
		}

		public Criteria andBuyeridEqualTo(Long value) {
			addCriterion("buyerid =", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridNotEqualTo(Long value) {
			addCriterion("buyerid <>", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridGreaterThan(Long value) {
			addCriterion("buyerid >", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridGreaterThanOrEqualTo(Long value) {
			addCriterion("buyerid >=", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridLessThan(Long value) {
			addCriterion("buyerid <", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridLessThanOrEqualTo(Long value) {
			addCriterion("buyerid <=", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridIn(List<Long> values) {
			addCriterion("buyerid in", values, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridNotIn(List<Long> values) {
			addCriterion("buyerid not in", values, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridBetween(Long value1, Long value2) {
			addCriterion("buyerid between", value1, value2, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridNotBetween(Long value1, Long value2) {
			addCriterion("buyerid not between", value1, value2, "buyerid");
			return (Criteria) this;
		}

		public Criteria andSelleridIsNull() {
			addCriterion("sellerid is null");
			return (Criteria) this;
		}

		public Criteria andSelleridIsNotNull() {
			addCriterion("sellerid is not null");
			return (Criteria) this;
		}

		public Criteria andSelleridEqualTo(Long value) {
			addCriterion("sellerid =", value, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridNotEqualTo(Long value) {
			addCriterion("sellerid <>", value, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridGreaterThan(Long value) {
			addCriterion("sellerid >", value, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridGreaterThanOrEqualTo(Long value) {
			addCriterion("sellerid >=", value, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridLessThan(Long value) {
			addCriterion("sellerid <", value, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridLessThanOrEqualTo(Long value) {
			addCriterion("sellerid <=", value, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridIn(List<Long> values) {
			addCriterion("sellerid in", values, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridNotIn(List<Long> values) {
			addCriterion("sellerid not in", values, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridBetween(Long value1, Long value2) {
			addCriterion("sellerid between", value1, value2, "sellerid");
			return (Criteria) this;
		}

		public Criteria andSelleridNotBetween(Long value1, Long value2) {
			addCriterion("sellerid not between", value1, value2, "sellerid");
			return (Criteria) this;
		}

		public Criteria andPaytypeIsNull() {
			addCriterion("paytype is null");
			return (Criteria) this;
		}

		public Criteria andPaytypeIsNotNull() {
			addCriterion("paytype is not null");
			return (Criteria) this;
		}

		public Criteria andPaytypeEqualTo(String value) {
			addCriterion("paytype =", value, "paytype");
			return (Criteria) this;
		}

		public Criteria andProductidIsNull() {
			addCriterion("productid is null");
			return (Criteria) this;
		}

		public Criteria andProductidIsNotNull() {
			addCriterion("productid is not null");
			return (Criteria) this;
		}

		public Criteria andProductidEqualTo(Long value) {
			addCriterion("productid =", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidNotEqualTo(Long value) {
			addCriterion("productid <>", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidGreaterThan(Long value) {
			addCriterion("productid >", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidGreaterThanOrEqualTo(Long value) {
			addCriterion("productid >=", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidLessThan(Long value) {
			addCriterion("productid <", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidLessThanOrEqualTo(Long value) {
			addCriterion("productid <=", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidIn(List<Long> values) {
			addCriterion("productid in", values, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidNotIn(List<Long> values) {
			addCriterion("productid not in", values, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidBetween(Long value1, Long value2) {
			addCriterion("productid between", value1, value2, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidNotBetween(Long value1, Long value2) {
			addCriterion("productid not between", value1, value2, "productid");
			return (Criteria) this;
		}

		public Criteria andTotalnumIsNull() {
			addCriterion("totalnum is null");
			return (Criteria) this;
		}

		public Criteria andTotalnumIsNotNull() {
			addCriterion("totalnum is not null");
			return (Criteria) this;
		}

		public Criteria andTotalnumEqualTo(Integer value) {
			addCriterion("totalnum =", value, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumNotEqualTo(Integer value) {
			addCriterion("totalnum <>", value, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumGreaterThan(Integer value) {
			addCriterion("totalnum >", value, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("totalnum >=", value, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumLessThan(Integer value) {
			addCriterion("totalnum <", value, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumLessThanOrEqualTo(Integer value) {
			addCriterion("totalnum <=", value, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumIn(List<Integer> values) {
			addCriterion("totalnum in", values, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumNotIn(List<Integer> values) {
			addCriterion("totalnum not in", values, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumBetween(Integer value1, Integer value2) {
			addCriterion("totalnum between", value1, value2, "totalnum");
			return (Criteria) this;
		}

		public Criteria andTotalnumNotBetween(Integer value1, Integer value2) {
			addCriterion("totalnum not between", value1, value2, "totalnum");
			return (Criteria) this;
		}

		public Criteria andShipcodeIsNull() {
			addCriterion("shipcode is null");
			return (Criteria) this;
		}

		public Criteria andShipcodeIsNotNull() {
			addCriterion("shipcode is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeEqualTo(Date value) {
			addCriterion("addtime =", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotEqualTo(Date value) {
			addCriterion("addtime <>", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThan(Date value) {
			addCriterion("addtime >", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("addtime >=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThan(Date value) {
			addCriterion("addtime <", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThanOrEqualTo(Date value) {
			addCriterion("addtime <=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeIn(List<Date> values) {
			addCriterion("addtime in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotIn(List<Date> values) {
			addCriterion("addtime not in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeBetween(Date value1, Date value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotBetween(Date value1, Date value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andLasttimeIsNull() {
			addCriterion("lasttime is null");
			return (Criteria) this;
		}

		public Criteria andLasttimeIsNotNull() {
			addCriterion("lasttime is not null");
			return (Criteria) this;
		}

		public Criteria andLasttimeEqualTo(Date value) {
			addCriterion("lasttime =", value, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeNotEqualTo(Date value) {
			addCriterion("lasttime <>", value, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeGreaterThan(Date value) {
			addCriterion("lasttime >", value, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeGreaterThanOrEqualTo(Date value) {
			addCriterion("lasttime >=", value, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeLessThan(Date value) {
			addCriterion("lasttime <", value, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeLessThanOrEqualTo(Date value) {
			addCriterion("lasttime <=", value, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeIn(List<Date> values) {
			addCriterion("lasttime in", values, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeNotIn(List<Date> values) {
			addCriterion("lasttime not in", values, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeBetween(Date value1, Date value2) {
			addCriterion("lasttime between", value1, value2, "lasttime");
			return (Criteria) this;
		}

		public Criteria andLasttimeNotBetween(Date value1, Date value2) {
			addCriterion("lasttime not between", value1, value2, "lasttime");
			return (Criteria) this;
		}

	}

	
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table shop_order
	 * 
	 * @mbggenerated Mon Apr 04 10:46:39 CST 2016
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}