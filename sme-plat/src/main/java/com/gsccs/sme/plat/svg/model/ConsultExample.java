package com.gsccs.sme.plat.svg.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.gsccs.sme.plat.bass.BaseExample;

public class ConsultExample extends BaseExample {

	protected String orderByClause;
	protected boolean distinct;
	protected List<Criteria> oredCriteria;

	public ConsultExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andItemidIsNull() {
			addCriterion("itemid is null");
			return (Criteria) this;
		}

		public Criteria andItemidIsNotNull() {
			addCriterion("itemid is not null");
			return (Criteria) this;
		}

		public Criteria andItemidEqualTo(Long value) {
			addCriterion("itemid =", value, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidNotEqualTo(Long value) {
			addCriterion("itemid <>", value, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidGreaterThan(Long value) {
			addCriterion("itemid >", value, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidGreaterThanOrEqualTo(Long value) {
			addCriterion("itemid >=", value, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidLessThan(Long value) {
			addCriterion("itemid <", value, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidLessThanOrEqualTo(Long value) {
			addCriterion("itemid <=", value, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidIn(List<Long> values) {
			addCriterion("itemid in", values, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidNotIn(List<Long> values) {
			addCriterion("itemid not in", values, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidBetween(Long value1, Long value2) {
			addCriterion("itemid between", value1, value2, "itemid");
			return (Criteria) this;
		}

		public Criteria andItemidNotBetween(Long value1, Long value2) {
			addCriterion("itemid not between", value1, value2, "itemid");
			return (Criteria) this;
		}

		public Criteria andCorpidIsNull() {
			addCriterion("corpid is null");
			return (Criteria) this;
		}

		public Criteria andCorpidIsNotNull() {
			addCriterion("corpid is not null");
			return (Criteria) this;
		}

		public Criteria andCorpidEqualTo(Long value) {
			addCriterion("corpid =", value, "corpid");
			return (Criteria) this;
		}

		public Criteria andCorpidNotEqualTo(Long value) {
			addCriterion("corpid <>", value, "corpid");
			return (Criteria) this;
		}

		public Criteria andCorpidIn(List<Long> values) {
			addCriterion("corpid in", values, "corpid");
			return (Criteria) this;
		}

		public Criteria andCorpidNotIn(List<Long> values) {
			addCriterion("corpid not in", values, "corpid");
			return (Criteria) this;
		}

		public Criteria andCorpidBetween(Long value1, Long value2) {
			addCriterion("corpid between", value1, value2, "corpid");
			return (Criteria) this;
		}

		public Criteria andCorpidNotBetween(Long value1, Long value2) {
			addCriterion("corpid not between", value1, value2, "corpid");
			return (Criteria) this;
		}

		public Criteria andSvgidIsNull() {
			addCriterion("svgid is null");
			return (Criteria) this;
		}

		public Criteria andSvgidIsNotNull() {
			addCriterion("svgid is not null");
			return (Criteria) this;
		}

		public Criteria andSvgidEqualTo(Long value) {
			addCriterion("svgid =", value, "svgid");
			return (Criteria) this;
		}

		public Criteria andSvgidNotEqualTo(Long value) {
			addCriterion("svgid <>", value, "svgid");
			return (Criteria) this;
		}

		public Criteria andSvgidIn(List<Long> values) {
			addCriterion("svgid in", values, "svgid");
			return (Criteria) this;
		}

		public Criteria andSvgidNotIn(List<Long> values) {
			addCriterion("svgid not in", values, "svgid");
			return (Criteria) this;
		}

		public Criteria andSvgidBetween(Long value1, Long value2) {
			addCriterion("svgid between", value1, value2, "svgid");
			return (Criteria) this;
		}

		public Criteria andSvgidNotBetween(Long value1, Long value2) {
			addCriterion("svgid not between", value1, value2, "svgid");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeEqualTo(Date value) {
			addCriterion("addtime =", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotEqualTo(Date value) {
			addCriterion("addtime <>", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeBetween(Date value1, Date value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotBetween(Date value1, Date value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return (Criteria) this;
		}

		
		public Criteria andScodeEqualTo(Long value) {
			addCriterion("scode =", value, "scode");
			return (Criteria) this;
		}
		
		public Criteria andParidIsNull() {
			addCriterion("parid is null");
			return (Criteria) this;
		}

		public Criteria andParidIsNotNull() {
			addCriterion("parid is not null");
			return (Criteria) this;
		}

		public Criteria andParidEqualTo(Long value) {
			addCriterion("parid =", value, "parid");
			return (Criteria) this;
		}

		public Criteria andParidNotEqualTo(String value) {
			addCriterion("parid <>", value, "parid");
			return (Criteria) this;
		}

		

		public Criteria andParidIn(List<String> values) {
			addCriterion("parid in", values, "parid");
			return (Criteria) this;
		}

		public Criteria andParidNotIn(List<String> values) {
			addCriterion("parid not in", values, "parid");
			return (Criteria) this;
		}


		public Criteria andContentIsNull() {
			addCriterion("content is null");
			return (Criteria) this;
		}

		public Criteria andContentIsNotNull() {
			addCriterion("content is not null");
			return (Criteria) this;
		}

		public Criteria andContentEqualTo(String value) {
			addCriterion("content =", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotEqualTo(String value) {
			addCriterion("content <>", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLike(String value) {
			addCriterion("content like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotLike(String value) {
			addCriterion("content not like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentIn(List<String> values) {
			addCriterion("content in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotIn(List<String> values) {
			addCriterion("content not in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentBetween(String value1, String value2) {
			addCriterion("content between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotBetween(String value1, String value2) {
			addCriterion("content not between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		

		public Criteria andIsshowEqualTo(String value) {
			addCriterion("isshow =", value, "isshow");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table sme_consult
	 * 
	 * @mbggenerated do_not_delete_during_merge Sun Mar 13 19:27:11 CST 2016
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table sme_consult
	 * 
	 * @mbggenerated Sun Mar 13 19:27:11 CST 2016
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}